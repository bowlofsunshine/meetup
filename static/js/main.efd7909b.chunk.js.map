{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","event","showDetails","handleShowDetails","setState","this","props","pieData","name","value","yes_rsvp_count","rsvp_limit","colors","className","key","id","local_date","local_time","group","onClick","description","width","height","isAnimationActive","data","cx","cy","outerRadius","label","map","entry","index","fill","verticalAlign","iconType","Component","EventList","events","mockEvents","created","duration","fee","accepts","amount","currency","required","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","is_online_event","join_mode","lat","lon","urlname","who","localized_location","country","region","timezone","link","visibility","member_pay_fee","getSuggestions","query","a","window","location","href","startsWith","city","localized_country_name","name_string","zip","getAccessToken","token","url","axios","get","result","getEvents","page","navigator","onLine","localStorage","getItem","JSON","parse","length","setItem","stringify","getOrRenewAccessToken","type","tokenInfo","access_token","refresh_token","Date","now","accessToken","searchParams","URLSearchParams","search","code","lastSavedTime","refreshToken","Alert","getStyle","color","fontSize","style","text","InfoAlert","ErrorAlert","CitySearch","suggestions","handleInputChanged","target","then","infoText","handleItemClicked","updateEvents","onChange","item","placeholder","NumberOfEvents","App","eventsText","warningText","countEventsOnADate","date","count","i","getData","next7Days","currentDate","moment","add","dateString","format","push","number","margin","top","right","bottom","left","dataKey","allowDecimals","cursor","strokeDasharray","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.efd7909b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    PieChart, Pie, Cell, Line, Legend, Tooltip, ResponsiveContainer,\n} from 'recharts';\n\nclass Event extends Component {\n    state = {\n        event: [],\n        showDetails: false\n    }\n\n    handleShowDetails = () => {\n        if (this.state.showDetails === false) {\n            this.setState({ showDetails: true });\n        }\n        else {\n            this.setState({ showDetails: false });\n        }\n    }\n\n    render() {\n        const showDetails = this.state.showDetails;\n        const { event } = this.props;\n\n        const pieData = [{\n            name: \"RSVP'd\",\n            value: event.yes_rsvp_count\n        },\n        {\n            name: \"Free Spots\",\n            value: (event.rsvp_limit - event.yes_rsvp_count)\n        }];\n        const colors = [\"DarkCyan\", \"CornflowerBlue\"];\n        return (\n            <div className=\"eventsList\">\n                <div className=\"eventDetails\">\n\n                    <div key={event.id}>\n                        <div className='eventDate'>Date: {event.local_date}</div>\n                        <div className='eventTime'>Time: {event.local_time}</div>\n                        <p className=\"name\">{event.name}</p>\n                        <div className=\"group-name\">Group: {event.group.name}</div>\n                        {!event.rsvp_limit &&\n                            <div className=\"going\"> {event.yes_rsvp_count} are going </div>}\n\n                        {showDetails &&\n                            <button className=\"hideDetailsButton details-btn\" onClick={() => this.handleShowDetails()}>Hide Details</button>\n                        }\n                        {!showDetails &&\n                            <button className=\"showDetailsButton details-btn\" onClick={() => this.handleShowDetails()}>Show Details</button>\n                        }\n                        {this.state.showDetails &&\n                            <div className=\"description\">\n                                {event.description}\n                                {event.rsvp_limit &&\n\n                                    <PieChart width={400} height={200}>\n                                        <Pie isAnimationActive={false} data={pieData} cx=\"50%\" cy=\"50%\" outerRadius={80} label>\n                                            {\n                                                pieData.map((entry, index) => (\n                                                    <Cell key={`cell-${index}`} fill={colors[index]} />\n                                                ))\n                                            }\n                                        </Pie>\n\n                                        <Tooltip />\n                                        <Legend verticalAlign=\"bottom\" height={24} iconType=\"triangle\" />\n                                    </PieChart>\n\n                                }\n                            </div>\n                        }\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\n    render() {\n        return (\n            <ul className=\"EventList\">\n                {this.props.events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default EventList;","const mockEvents =\n{\n    city: {\n        id: 1007700,\n        city: 'München',\n        lat: 48.14,\n        lon: 11.58,\n        state: '',\n        country: 'de',\n        zip: 'meetup3',\n        member_count: 1257\n    },\n    events: [\n        {\n            created: 1574974495000,\n            duration: 10800000,\n            fee: {\n                accepts: 'paypal',\n                amount: 15,\n                currency: 'EUR',\n                description: '',\n                label: 'Price',\n                required: true\n            },\n            id: '266813030',\n            name: 'Agile Game Night #42 - Murmelbahnspiel',\n            rsvp_limit: 15,\n            date_in_series_pattern: false,\n            status: 'upcoming',\n            time: 1594917000000,\n            local_date: '2020-06-18',\n            local_time: '18:30',\n            updated: 1582196146000,\n            utc_offset: 7200000,\n            waitlist_count: 0,\n            yes_rsvp_count: 3,\n            is_online_event: false,\n            group: {\n                created: 1471362725000,\n                name: 'Agile Game Nights',\n                id: 20321716,\n                join_mode: 'open',\n                lat: 48.13999938964844,\n                lon: 11.579999923706055,\n                urlname: 'Agile-Game-Night',\n                who: 'Agile Gamer',\n                localized_location: 'München, Germany',\n                state: '',\n                country: 'de',\n                region: 'en_US',\n                timezone: 'Europe/Berlin'\n            },\n            link: 'https://www.meetup.com/Agile-Game-Night/events/266813030/',\n            description: 'ATTENTION: We decide at the beginning of June based on the current situation whether we will play live or remotely!',\n            visibility: 'public',\n            member_pay_fee: false\n        },\n        {\n            created: 1574974495000,\n            duration: 10800000,\n            fee: {\n                accepts: 'paypal',\n                amount: 15,\n                currency: 'EUR',\n                description: '',\n                label: 'Price',\n                required: true\n            },\n            id: '266813030',\n            name: 'Agile Game Night #42 - Murmelbahnspiel',\n            date_in_series_pattern: false,\n            status: 'upcoming',\n            time: 1594917000000,\n            local_date: '2020-06-18',\n            local_time: '18:30',\n            updated: 1582196146000,\n            utc_offset: 7200000,\n            waitlist_count: 0,\n            yes_rsvp_count: 3,\n            is_online_event: false,\n            group: {\n                created: 1471362725000,\n                name: 'Agile Game Nights',\n                id: 20321716,\n                join_mode: 'open',\n                lat: 48.13999938964844,\n                lon: 11.579999923706055,\n                urlname: 'Agile-Game-Night',\n                who: 'Agile Gamer',\n                localized_location: 'München, Germany',\n                state: '',\n                country: 'de',\n                region: 'en_US',\n                timezone: 'Europe/Berlin'\n            },\n            link: 'https://www.meetup.com/Agile-Game-Night/events/266813030/',\n            description: 'ATTENTION: We decide at the beginning of June based on the current situation whether we will play live or remotely!',\n            visibility: 'public',\n            member_pay_fee: false\n        },\n        {\n            created: 1574974495000,\n            duration: 10800000,\n            fee: {\n                accepts: 'paypal',\n                amount: 15,\n                currency: 'EUR',\n                description: '',\n                label: 'Price',\n                required: true\n            },\n            id: '266813030',\n            name: 'Agile Game Night #42 - Murmelbahnspiel',\n            rsvp_limit: 15,\n            date_in_series_pattern: false,\n            status: 'upcoming',\n            time: 1594917000000,\n            local_date: '2020-06-17',\n            local_time: '18:30',\n            updated: 1582196146000,\n            utc_offset: 7200000,\n            waitlist_count: 0,\n            yes_rsvp_count: 3,\n            is_online_event: false,\n            group: {\n                created: 1471362725000,\n                name: 'Agile Game Nights',\n                id: 20321716,\n                join_mode: 'open',\n                lat: 48.13999938964844,\n                lon: 11.579999923706055,\n                urlname: 'Agile-Game-Night',\n                who: 'Agile Gamer',\n                localized_location: 'München, Germany',\n                state: '',\n                country: 'de',\n                region: 'en_US',\n                timezone: 'Europe/Berlin'\n            },\n            link: 'https://www.meetup.com/Agile-Game-Night/events/266813030/',\n            description: 'ATTENTION: We decide at the beginning of June based on the current situation whether we will play live or remotely!',\n            visibility: 'public',\n            member_pay_fee: false\n        },\n        {\n            created: 1574974495000,\n            duration: 10800000,\n            fee: {\n                accepts: 'paypal',\n                amount: 15,\n                currency: 'EUR',\n                description: '',\n                label: 'Price',\n                required: true\n            },\n            id: '266813030',\n            name: 'Agile Game Night #42 - Murmelbahnspiel',\n            rsvp_limit: 15,\n            date_in_series_pattern: false,\n            status: 'upcoming',\n            time: 1594917000000,\n            local_date: '2020-06-19',\n            local_time: '18:30',\n            updated: 1582196146000,\n            utc_offset: 7200000,\n            waitlist_count: 0,\n            yes_rsvp_count: 3,\n            is_online_event: false,\n            group: {\n                created: 1471362725000,\n                name: 'Agile Game Nights',\n                id: 20321716,\n                join_mode: 'open',\n                lat: 48.13999938964844,\n                lon: 11.579999923706055,\n                urlname: 'Agile-Game-Night',\n                who: 'Agile Gamer',\n                localized_location: 'München, Germany',\n                state: '',\n                country: 'de',\n                region: 'en_US',\n                timezone: 'Europe/Berlin'\n            },\n            link: 'https://www.meetup.com/Agile-Game-Night/events/266813030/',\n            description: 'ATTENTION: We decide at the beginning of June based on the current situation whether we will play live or remotely!',\n            visibility: 'public',\n            member_pay_fee: false\n        },\n        {\n            created: 1574974495000,\n            duration: 10800000,\n            fee: {\n                accepts: 'paypal',\n                amount: 15,\n                currency: 'EUR',\n                description: '',\n                label: 'Price',\n                required: true\n            },\n            id: '266813030',\n            name: 'Agile Game Night #42 - Murmelbahnspiel',\n            rsvp_limit: 15,\n            date_in_series_pattern: false,\n            status: 'upcoming',\n            time: 1594917000000,\n            local_date: '2020-06-18',\n            local_time: '18:30',\n            updated: 1582196146000,\n            utc_offset: 7200000,\n            waitlist_count: 0,\n            yes_rsvp_count: 3,\n            is_online_event: false,\n            group: {\n                created: 1471362725000,\n                name: 'Agile Game Nights',\n                id: 20321716,\n                join_mode: 'open',\n                lat: 48.13999938964844,\n                lon: 11.579999923706055,\n                urlname: 'Agile-Game-Night',\n                who: 'Agile Gamer',\n                localized_location: 'München, Germany',\n                state: '',\n                country: 'de',\n                region: 'en_US',\n                timezone: 'Europe/Berlin'\n            },\n            link: 'https://www.meetup.com/Agile-Game-Night/events/266813030/',\n            description: 'ATTENTION: We decide at the beginning of June based on the current situation whether we will play live or remotely!',\n            visibility: 'public',\n            member_pay_fee: false\n        }\n    ]\n}\n\nexport { mockEvents };","import { mockEvents } from './mock-events';\nimport axios from 'axios';\n\nasync function getSuggestions(query) {\n    if (window.location.href.startsWith('http://localhost')) {\n        return [\n            {\n                city: 'Munich',\n                country: 'de',\n                localized_country_name: 'Germany',\n                name_string: 'Munich, Germany',\n                zip: 'meetup3',\n                lat: 48.14,\n                lon: 11.58\n            },\n            {\n                city: 'Munich',\n                country: 'us',\n                localized_country_name: 'USA',\n                state: 'ND',\n                name_string: 'Munich, North Dakota, USA',\n                zip: '58352',\n                lat: 48.66,\n                lon: -98.85\n            }\n        ];\n    }\n\n    const token = await getAccessToken();\n    if (token) {\n        const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\n            + query\n            + '&access_token=' + token;\n        const result = await axios.get(url);\n        return result.data;\n    }\n    return [];\n}\n\nasync function getEvents(lat, lon, page) {\n    if (window.location.href.startsWith('http://localhost')) {\n        return mockEvents.events;\n    }\n\n    if (!navigator.onLine) {\n        const events = localStorage.getItem('lastEvents');\n        return JSON.parse(events);\n    }\n\n    const token = await getAccessToken();\n\n    if (token) {\n        let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\n            + '&access_token=' + token;\n        // lat, lon is optional, if we have lat and lon, then we can add them\n        if (lat && lon) {\n            url += '&lat=' + lat + '&lon=' + lon;\n        }\n        if (page) {\n            url += '&page=' + page;\n        }\n        const result = await axios.get(url);\n        const events = result.data.events;\n        if (events.length) {\n            localStorage.setItem('lastEvents', JSON.stringify(events));\n        }\n\n        return events;\n    }\n    return [];\n}\n\n\nasync function getOrRenewAccessToken(type, key) {\n    let url;\n    if (type === 'get') {\n        // Lambda endpoint to get token by code\n        url = 'https://0vj8yny5ze.execute-api.eu-central-1.amazonaws.com/dev/api/token/'\n            + key;\n    } else if (type === 'renew') {\n        // Lambda endpoint to get token by refresh_token\n        url = 'https://0vj8yny5ze.execute-api.eu-central-1.amazonaws.com/dev/api/refresh/'\n            + key;\n    }\n\n    // Use Axios to make a GET request to the endpoint\n    const tokenInfo = await axios.get(url);\n\n    // Save tokens to localStorage together with a timestamp\n    localStorage.setItem('access_token', tokenInfo.data.access_token);\n    localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n    localStorage.setItem('last_saved_time', Date.now());\n\n    // Return the access_token\n    return tokenInfo.data.access_token;\n}\n\nasync function getAccessToken() {\n    const accessToken = localStorage.getItem('access_token');\n    if (!accessToken) {\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = searchParams.get('code');\n\n        if (!code) {\n            window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=devdka9vqbs3orgak8g9s39jg7&response_type=code&redirect_uri=https://bowlofsunshine.github.io/meetup/';\n            return null;\n        }\n        return getOrRenewAccessToken('get', code);\n    }\n    const lastSavedTime = localStorage.getItem('last_saved_time');\n\n    if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\n        return accessToken;\n    }\n    // If the access_token is expired, we try to renew it by using refresh_token\n    const refreshToken = localStorage.getItem('refresh_token');\n    return getOrRenewAccessToken('renew', refreshToken);\n}\n\n\n\nexport { getSuggestions, getEvents, getAccessToken };","import React, { Component } from 'react';\n\nclass Alert extends Component {\n    constructor(props) {\n        super(props);\n        this.color = null;\n    }\n\n    getStyle = () => {\n        return {\n            color: this.color,\n            fontSize: this.fontSize\n        }\n    }\n\n    render() {\n        return (\n            <div className='Alert'>\n                <p style={this.getStyle()}>{this.props.text}</p>\n            </div>\n        );\n    }\n}\n\nclass InfoAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = 'blue';\n        this.fontSize = '24px';\n    }\n}\n\nclass ErrorAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = 'red';\n    }\n}\n\nclass WarningAlert extends Alert {\n    constructor(props) {\n        super(props)\n        this.color = 'orange';\n        this.fontSize = '24px';\n    }\n}\n\nexport { InfoAlert, ErrorAlert, WarningAlert };","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: []\n    }\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.setState({ query: value });\n        getSuggestions(value).then(suggestions => {\n            this.setState({ suggestions });\n\n            if (value && suggestions.length === 0) {\n                this.setState({\n                    infoText: 'We can not find the city you are looking for. Please try another city',\n                });\n            } else {\n                this.setState({\n                    infoText: '',\n                });\n            }\n        });\n    }\n    handleItemClicked = (value, lat, lon) => {\n        this.setState({ query: value, suggestions: [] });\n        this.props.updateEvents(lat, lon);\n    }\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n\n                <InfoAlert text={this.state.infoText} />\n\n                <input type=\"text\" className=\"city\" value={this.state.query} onChange={this.handleInputChanged} />\n\n                <ul className=\"suggestions\">\n                    {this.state.suggestions.map(item =>\n                        <li key={item.name_string} onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)} placeholder=\"Enter a city\">{item.name_string}</li>)}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n    state = {\n        query: 32, //default event number per page for meetup\n    }\n\n    // handleInputChanged = (event) => {\n    //     const value = event.target.value;\n    //     this.setState({ query: value });\n    //     this.props.updateEvents(null, null, value);\n    // }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.setState({ query: value });\n\n        if (value <= 0) {\n            this.setState({\n                infoText: 'You should probably show at least one listing'\n            });\n        } else {\n            this.setState({\n                infoText: ''\n            })\n            this.props.updateEvents(null, null, value);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"numberOfEvents\">\n                <ErrorAlert text={this.state.infoText} />\n                <label>Show <input type=\"number\" className=\"number\" value={this.state.query} onChange={this.handleInputChanged} placeholder=\"32\"></input> Events </label>\n            </div>\n        );\n    }\n}\n\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\nimport { WarningAlert } from './Alert';\nimport { InfoAlert } from './Alert';\nimport moment from 'moment';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\n} from 'recharts';\n\nclass App extends Component {\n  state = {\n    events: [],\n    // lat: null,\n    // lon: null,\n    page: null,\n    eventsText: '',\n    warningText: ''\n  }\n\n  componentDidMount() {\n    this.updateEvents();\n  }\n\n  countEventsOnADate = (date) => {\n    let count = 0;\n    for (let i = 0; i < this.state.events.length; i += 1) {\n      if (this.state.events[i].local_date === date) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  getData = () => {\n    const next7Days = []; // Create empty array for the next 7 days\n    const currentDate = moment(); // Today\n    // Loop 7 times for next 7 days\n    for (let i = 0; i < 7; i += 1) {\n      currentDate.add(1, 'days'); // Add 1 day to current date, currentDate changes\n      const dateString = currentDate.format('YYYY-MM-DD'); // Format the date\n      // Use the countEventsOnADate function to count #events on this date\n      const count = this.countEventsOnADate(dateString);\n      next7Days.push({ date: dateString, number: count }); // Add this date and number to the list\n    }\n    return next7Days;\n  }\n\n  updateEvents = (lat, lon, page) => {\n\n    if (!navigator.onLine) {\n      this.setState({\n        warningText: 'No network connection, events displayed are from previous online session.'\n      });\n    } else {\n      this.setState({\n        warningText: ''\n      });\n    }\n\n    if (this.state.events.length === 0) {\n      this.setState({\n        eventsText: 'There are no events currently in your city.'\n      });\n    } else {\n      this.setState({\n        eventsText: ''\n      })\n    }\n\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then(events =>\n        this.setState({ events, lat, lon })\n      );\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(events =>\n        this.setState({ events, page })\n      );\n    } else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(events =>\n        this.setState({ events })\n      );\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <InfoAlert text={this.state.warningText} />\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} />\n        <InfoAlert text={this.state.eventsText} />\n        <ResponsiveContainer height={400}>\n          <ScatterChart\n            margin={{\n              top: 20, right: 20, bottom: 20, left: 20,\n            }}\n          >\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"date\" name=\"date\" />\n            <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter name=\"A school\" data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n        console.log(\"error in serviceworker\")\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-spa';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\natatus.config('c7f24007ebbb44bbbb6d8b889e5d2c5e').install();\n"],"sourceRoot":""}